"""
Django settings for krinitsa project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'SECRET'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', # админка для управления сайтом
    'django.contrib.auth', # механизм авторизации
    'django.contrib.contenttypes', # полиморфные связи в БД, управления майнтипами
    'django.contrib.sessions', # управление сессиями на сайте
    'django.contrib.messages', # сообщения клиенту
    'django.contrib.staticfiles', # содержит функции для отправки статических файлов
]
# промежуточное ПО, взаимодейские клиент-MIDDLEWARE-сервер
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware', # проверка безопасности
    'django.contrib.sessions.middleware.SessionMiddleware', # обработка сессии
    'django.middleware.common.CommonMiddleware', # общие операции: парсинг, конвертация и т.д.
    'django.middleware.csrf.CsrfViewMiddleware', # блокирует атаки
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Авторизация
    'django.contrib.messages.middleware.MessageMiddleware', # отправка сообщений
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # запрещает от атак кражи кликов
]
# настройка указывает где искать массив url-партернс
ROOT_URLCONF = 'krinitsa.urls'
# указывает где искать шаблоны для вью
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'krinitsa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
# указываются все БД с которыми работаем
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'crm_krinitsa',
        'USER': 'postgres',
        'PASSWORD': '***'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators
# указывает какими минимальными требованиями должен обладать пароль
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # пароль не должен быть похож на имя пользователя
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # не должен быть меньше 8 символов
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # проверка пароля на часто используемые
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # проверка на как минимум одну цифру в пароле
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
